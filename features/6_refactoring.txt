# –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫

## –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å
–¶—è —Ñ—ñ—á–∞ –≤–∫–ª—é—á–∞—î —Ä—ñ–∑–Ω—ñ –ø–æ–ª—ñ–ø—à–µ–Ω–Ω—è –∫–æ–¥—É, –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó, —è–∫—ñ –±—É–ª–∏ –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω—ñ –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—Ç–∫—É. –û—Å–Ω–æ–≤–Ω–∞ —É–≤–∞–≥–∞ –ø—Ä–∏–¥—ñ–ª—è–ª–∞—Å—è —É—Å—É–Ω–µ–Ω–Ω—é –ø–æ–º–∏–ª–æ–∫ NullPointerException, –≤–∏—Ä—ñ—à–µ–Ω–Ω—é –ø—Ä–æ–±–ª–µ–º –∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è–º GlobalKey, –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—é –æ–±—Ä–æ–±–∫–∏ API-–≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π —Ç–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—é –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º.

## –ö–ª—é—á–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏

### 1. –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è GlobalKey –≤ MyCarsScreen
–ü—Ä–æ–±–ª–µ–º–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è GlobalKey –≤–∏–Ω–∏–∫–∞–ª–∞, –∫–æ–ª–∏ MyCarsScreen –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –≤ —Ä—ñ–∑–Ω–∏—Ö —á–∞—Å—Ç–∏–Ω–∞—Ö –¥–æ–¥–∞—Ç–∫—É –∑ –æ–¥–Ω–∏–º —ñ —Ç–∏–º –∂–µ —Å—Ç–∞—Ç–∏—á–Ω–∏–º –∫–ª—é—á–µ–º.

#### –ë—É–ª–æ:
```dart
// lib/features/car/screens/my_cars_screen.dart
class MyCarsScreen extends StatefulWidget {
  static final GlobalKey<_MyCarsScreenState> globalKey = GlobalKey<_MyCarsScreenState>();
  
  const MyCarsScreen({Key? key = globalKey}) : super(key: key);
  
  @override
  _MyCarsScreenState createState() => _MyCarsScreenState();
}
```

#### –°—Ç–∞–ª–æ:
```dart
// lib/features/car/screens/my_cars_screen.dart
class MyCarsScreen extends StatefulWidget {
  // –ó–∞–º—ñ—Å—Ç—å —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ–∞–±—Ä–∏—á–Ω–∏–π –º–µ—Ç–æ–¥
  static GlobalKey<_MyCarsScreenState> createKey() => GlobalKey<_MyCarsScreenState>();
  
  const MyCarsScreen({Key? key}) : super(key: key);
  
  @override
  _MyCarsScreenState createState() => _MyCarsScreenState();
}

// lib/features/home/screens/home_screen.dart
class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  // –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞
  final myCarsKey = MyCarsScreen.createKey();
  
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // ...
      body: MyCarsScreen(key: myCarsKey),
      // ...
    );
  }
}
```

### 2. –ü–æ–ª—ñ–ø—à–µ–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö –ø–æ–ª—ñ–≤ –≤ API-–≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö
–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ NullPointerException –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –≤—ñ–¥ API, –¥–µ –¥–µ—è–∫—ñ –ø–æ–ª—è –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.

#### –û–±—Ä–æ–±–∫–∞ –ø–æ–ª—è is_verified –≤ ProfileModel:
```dart
// lib/features/user/models/profile_model.dart
class ProfileModel {
  final String name;
  final String surname;
  final bool isVerified;
  
  ProfileModel({
    required this.name,
    required this.surname,
    this.isVerified = false, // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
  });
  
  factory ProfileModel.fromJson(Map<String, dynamic> json) {
    return ProfileModel(
      name: json['name'] ?? '',
      surname: json['surname'] ?? '',
      isVerified: json['is_verified'] ?? false, // –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è
    );
  }
  
  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'surname': surname,
      'is_verified': isVerified,
    };
  }
}
```

#### –î–æ–¥–∞—Ç–∫–æ–≤–∞ –æ–±—Ä–æ–±–∫–∞ –≤ AuthRepository:
```dart
// lib/features/auth/repositories/auth_repository.dart
Future<UserModel> register(String email, String password, String name, String surname) async {
  // ...
  if (response.statusCode == 200 || response.statusCode == 201) {
    // ...
    final userJson = response.data['user'] as Map<String, dynamic>;
    
    // –ü–µ—Ä–µ–∫–æ–Ω–∞—î–º–æ—Å—è, —â–æ –ø—Ä–æ—Ñ—ñ–ª—å –º—ñ—Å—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
    if (userJson.containsKey('profile') && userJson['profile'] is Map<String, dynamic>) {
      // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ profile.is_verified = false (–¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
      if (!userJson['profile'].containsKey('is_verified')) {
        (userJson['profile'] as Map<String, dynamic>)['is_verified'] = false;
      }
    }
    
    print('DEBUG: Register response - user: $userJson');
    final user = UserModel.fromJson(userJson);
    // ...
  }
  // ...
}
```

### 3. –†–æ–∑—à–∏—Ä–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è

#### –î–æ–¥–∞–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ ApiClient:
```dart
// lib/core/api/api_client.dart
_dio.interceptors.add(LogInterceptor(
  requestBody: true,
  responseBody: true,
  logPrint: (object) => print('[DIO] ${object.toString()}'),
));

_dio.interceptors.add(
  InterceptorsWrapper(
    onRequest: (options, handler) async {
      // ...
      print('[API] üöÄ REQUEST: ${options.method} ${options.path}');
      return handler.next(options);
    },
    onResponse: (response, handler) {
      print('[API] ‚úÖ RESPONSE [${response.statusCode}]: ${response.requestOptions.path}');
      return handler.next(response);
    },
    onError: (DioException error, handler) async {
      print('[API] ‚ùå ERROR [${error.response?.statusCode}]: ${error.requestOptions.path}');
      print('[API] Error message: ${error.message}');
      // ...
    },
  ),
);
```

#### –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:
```dart
// lib/features/auth/bloc/auth_bloc.dart
Future<void> _onRegister(
  AuthRegisterEvent event,
  Emitter<AuthState> emit,
) async {
  emit(AuthLoading());
  try {
    final repository = await _getRepository();
    final user = await repository.register(
      event.email,
      event.password,
      event.name,
      event.surname,
    );
    print('DEBUG: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ isNewUser=true');
    print('DEBUG: –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ isVerified=${user.profile?.isVerified ?? false}');
    emit(AuthAuthenticated.newUser(user));
  } catch (e) {
    print('DEBUG: Register exception: ${e.runtimeType}');
    if (e is ApiException) {
      print('DEBUG: API exception: ${e.message}, statusCode: ${e.statusCode}');
      if (e.authError != null) {
        print('DEBUG: API auth error: ${e.authError!.fieldErrors}');
        emit(AuthFailure.fromError(e.authError!));
      } else {
        print('DEBUG: No structured error, creating from exception');
        emit(AuthFailure.fromError(e));
      }
    } else {
      print('DEBUG: Unknown exception type: $e');
      emit(AuthFailure.fromError(e));
    }
  }
}
```

### 4. –ü–æ–ª—ñ–ø—à–µ–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫

#### –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è AuthErrorModel:
```dart
// lib/features/auth/models/auth_error_model.dart
class AuthErrorModel {
  final Map<String, List<String>> fieldErrors;
  final int? statusCode;
  final String? rawResponse;

  AuthErrorModel({
    required this.fieldErrors,
    this.statusCode,
    this.rawResponse,
  });

  factory AuthErrorModel.fromResponse(dynamic responseData, {int? statusCode}) {
    final Map<String, List<String>> fieldErrors = {};
    
    print('DEBUG: AuthErrorModel.fromResponse - responseData: $responseData');
    
    if (responseData is Map<String, dynamic>) {
      responseData.forEach((key, value) {
        if (key != '_query_stats') {
          print('DEBUG: AuthErrorModel.fromResponse - processing key: $key, value: $value (${value.runtimeType})');
          if (value is List) {
            fieldErrors[key] = List<String>.from(value);
          } else if (value is String) {
            fieldErrors[key] = [value];
          }
        }
      });
    }

    return AuthErrorModel(
      fieldErrors: fieldErrors,
      statusCode: statusCode,
      rawResponse: responseData is String ? responseData : jsonEncode(responseData),
    );
  }

  String getFirstError() {
    if (fieldErrors.isEmpty) return 'Unknown error occurred';
    
    final firstField = fieldErrors.keys.first;
    final firstError = fieldErrors[firstField]?.first ?? 'Error';
    
    return '$firstField: $firstError';
  }

  String getAllErrors() {
    if (fieldErrors.isEmpty) return 'Unknown error occurred';
    
    return fieldErrors.entries
        .map((e) => '${e.key}: ${e.value.join(', ')}')
        .join('\n');
  }
}
```

#### –†–æ–∑—à–∏—Ä–µ–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –≤ AuthState:
```dart
// lib/features/auth/bloc/auth_state.dart
class AuthFailure extends AuthState {
  final String error;
  final AuthErrorModel? apiError;

  const AuthFailure(this.error, {this.apiError});

  factory AuthFailure.fromError(dynamic error) {
    print('DEBUG: AuthFailure.fromError - error type: ${error.runtimeType}');
    
    if (error is AuthErrorModel) {
      print('DEBUG: AuthFailure.fromError - converting AuthErrorModel: ${error.fieldErrors}');
      return AuthFailure(
        error.getFirstError(),
        apiError: error,
      );
    } else if (error is ApiException && error.authError != null) {
      print('DEBUG: AuthFailure.fromError - extracting from ApiException: ${error.authError!.fieldErrors}');
      return AuthFailure(
        error.message,
        apiError: error.authError,
      );
    }
    return AuthFailure(error.toString());
  }

  bool get hasFieldErrors => apiError != null && apiError!.fieldErrors.isNotEmpty;
  String get allErrors => apiError?.getAllErrors() ?? error;
  Map<String, List<String>> get fieldErrors => apiError?.fieldErrors ?? {};
}
```

## –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É

### –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –î—É–±–ª—é–≤–∞–Ω–Ω—è GlobalKey
**–ü—Ä–æ–±–ª–µ–º–∞:**
1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–∫—Ä–∏–≤–∞—î HomeScreen
2. –í HomeScreen –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è MyCarsScreen
3. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —ñ–Ω—à–∏–π –µ–∫—Ä–∞–Ω, –¥–µ —Ç–∞–∫–æ–∂ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è MyCarsScreen
4. –í–∏–Ω–∏–∫–∞—î –≤–∏–Ω—è—Ç–æ–∫: "Multiple widgets used the same GlobalKey"

**–í–∏—Ä—ñ—à–µ–Ω–Ω—è:**
1. –ó–∞–º—ñ–Ω–∏–ª–∏ —Å—Ç–∞—Ç–∏—á–Ω–∏–π GlobalKey –Ω–∞ —Ñ–∞–±—Ä–∏—á–Ω–∏–π –º–µ—Ç–æ–¥, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –≤–∏–∫–ª–∏–∫—É
2. –¢–µ–ø–µ—Ä –∫–æ–∂–µ–Ω –µ–∫–∑–µ–º–ø–ª—è—Ä MyCarsScreen –º–∞—î —Å–≤—ñ–π –≤–ª–∞—Å–Ω–∏–π –∫–ª—é—á
3. –ü–æ–º–∏–ª–∫–∞ –±—ñ–ª—å—à–µ –Ω–µ –≤–∏–Ω–∏–∫–∞—î

### –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥—Å—É—Ç–Ω—å–æ–≥–æ –ø–æ–ª—è is_verified
**–ü—Ä–æ–±–ª–µ–º–∞:**
1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–µ—î—Å—Ç—Ä—É—î—Ç—å—Å—è –≤ –¥–æ–¥–∞—Ç–∫—É
2. –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –±–µ–∑ –ø–æ–ª—è is_verified –≤ profile
3. –ü—Ä–∏ —Å–ø—Ä–æ–±—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤–∏–Ω–∏–∫–∞—î NPE

**–í–∏—Ä—ñ—à–µ–Ω–Ω—è:**
1. –î–æ–¥–∞–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–æ–ª—è is_verified –≤ ProfileModel.fromJson
2. –Ø–∫—â–æ –ø–æ–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—î, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (false)
3. –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –ø–æ–ª–µ —Ç–æ—á–Ω–æ —î –≤ –¥–∞–Ω–∏—Ö –ø–µ—Ä–µ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º UserModel
4. NPE –±—ñ–ª—å—à–µ –Ω–µ –≤–∏–Ω–∏–∫–∞—î

### –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –°—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
**–ü—Ä–æ–±–ª–µ–º–∞:**
1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –∑ email, —è–∫–∏–π –≤–∂–µ —ñ—Å–Ω—É—î
2. –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ç–∞—î —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—É –ø–æ–º–∏–ª–∫—É –∑ –∫–æ–¥–æ–º 400
3. –ü–æ–º–∏–ª–∫–∞ –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ

**–í–∏—Ä—ñ—à–µ–Ω–Ω—è:**
1. –î–æ–¥–∞–ª–∏ –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ —É—Å—å–æ–º—É –ª–∞–Ω—Ü—é–∂–∫—É –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
2. –ü–æ–ª—ñ–ø—à–∏–ª–∏ AuthErrorModel –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ä—ñ–∑–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤ –¥–∞–Ω–∏—Ö
3. –†–æ–∑—à–∏—Ä–∏–ª–∏ AuthFailure –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —è–∫ –∑–≤–∏—á–∞–π–Ω–∏—Ö –≤–∏–Ω—è—Ç–∫—ñ–≤, —Ç–∞–∫ —ñ ApiException –∑ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ authError
4. –¢–µ–ø–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è –≤ SnackBar

## –í–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º
–Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—é—Ç—å –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—é, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ:

1. **–ü—Ä–æ–±–ª–µ–º–∏ –∑ GlobalKey:**
   - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤—Å—ñ –µ–∫–∑–µ–º–ø–ª—è—Ä–∏ MyCarsScreen —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –∫–ª—é—á–µ–º
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —â–æ –º–µ—Ç–æ–¥ `MyCarsScreen.createKey()` –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á–∞
   - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –∫–ª—é—á –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ñ–¥–∂–µ—Ç–∞

2. **NPE –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö –≤—ñ–¥ API:**
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤—Å—ñ –º—ñ—Å—Ü—è, –¥–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è JSON –≤ –º–æ–¥–µ–ª—ñ
   - –î–æ–¥–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤, —è–∫—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ null
   - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä null-coalescing (??) –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–æ–ª—ñ–≤

3. **–ü—Ä–æ–±–ª–µ–º–∏ –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –ø–æ–º–∏–ª–æ–∫:**
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏, —â–æ–± –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫–∞ —Å–∞–º–µ –ø–æ–º–∏–ª–∫–∞ –≤–∏–Ω–∏–∫–∞—î
   - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –ª–∞–Ω—Ü—é–∂–æ–∫ –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ:
     - ApiClient -> ApiException -> AuthErrorModel -> AuthFailure -> UI
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ø–æ–º–∏–ª–æ–∫, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º
   - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ AuthBloc –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—î –≤–∏–Ω—è—Ç–∫–∏ —ñ –ø–µ—Ä–µ–¥–∞—î —ó—Ö —É —Å—Ç–∞–Ω

4. **–ó–∞–≥–∞–ª—å–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:**
   - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –¥–æ–¥–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤—Å—ñ —Ç–æ—á–∫–∏, –¥–µ –º–∏ –æ–±—Ä–æ–±–ª—è—î–º–æ null-–∑–Ω–∞—á–µ–Ω–Ω—è
   - –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º, —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –º–æ–¥–µ–ª–µ–π —Ü–∏–º –¥–∞–Ω–∏–º
